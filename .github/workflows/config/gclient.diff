diff --git a/gclient.py b/gclient.py
index 59e2b4c5197928bdba1ef69bdbe637d7dfe471c1..b4bae5e48c83c84bd867187afaf40eed16e69851 100755
--- a/gclient.py
+++ b/gclient.py
@@ -783,7 +783,8 @@ class Dependency(gclient_utils.WorkItem, DependencySettings):
                         not condition or "non_git_source" not in condition):
                     continue
                 cipd_root = self.GetCipdRoot()
-                for package in dep_value.get('packages', []):
+                packages = dep_value.get('packages', [])
+                for package in (x for x in packages if "infra/3pp/tools/swift-format" not in x.get('package')):
                     deps_to_add.append(
                         CipdDependency(parent=self,
                                        name=name,
diff --git a/gclient_paths.py b/gclient_paths.py
index dc660941..572d0444 100644
--- a/gclient_paths.py
+++ b/gclient_paths.py
@@ -20,7 +20,7 @@ import subprocess2
 # pylint: disable=line-too-long


-@functools.lru_cache
+@functools.lru_cache()
 def FindGclientRoot(from_dir, filename='.gclient'):
     """Tries to find the gclient root."""
     real_from_dir = os.path.abspath(from_dir)
@@ -71,7 +71,7 @@ def FindGclientRoot(from_dir, filename='.gclient'):
     return None


-@functools.lru_cache
+@functools.lru_cache()
 def _GetPrimarySolutionPathInternal(cwd):
     gclient_root = FindGclientRoot(cwd)
     if gclient_root:
@@ -100,7 +100,7 @@ def GetPrimarySolutionPath():
     return _GetPrimarySolutionPathInternal(os.getcwd())


-@functools.lru_cache
+@functools.lru_cache()
 def _GetBuildtoolsPathInternal(cwd, override):
     if override is not None:
         return override
@@ -155,7 +155,7 @@ def GetExeSuffix():
     return ''


-@functools.lru_cache
+@functools.lru_cache()
 def GetGClientPrimarySolutionName(gclient_root_dir_path):
     """Returns the name of the primary solution in the .gclient file specified."""
     gclient_config_file = os.path.join(gclient_root_dir_path, '.gclient')
diff --git a/git_common.py b/git_common.py
index 6d6ac6c6..b6f77418 100644
--- a/git_common.py
+++ b/git_common.py
@@ -1201,7 +1201,7 @@ def upstream(branch):
         return None


-@functools.lru_cache
+@functools.lru_cache()
 def check_git_version(
         min_version: Tuple[int] = GIT_MIN_VERSION) -> Optional[str]:
     """Checks whether git is installed, and its version meets the recommended
