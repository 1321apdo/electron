From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alice Zhao <alice@makenotion.com>
Date: Thu, 20 Jun 2024 14:50:13 -0700
Subject: Check for NODE_21_0_MODULE_VERSION

    Refs https://chromium-review.googlesource.com/c/v8/v8/+/5006387
    Should be upstreamed.

    Module version checks are made against 119 since that is the current assigned version
    for Electron 28 in https://github.com/nodejs/node/blob/main/doc/abi_version_registry.json.
    The version should be updateed to the one assinged for Electron 29 when it is available.

    Steps for upstreaming this patch:

    - Get a new module version assigned for Electron 29 in nodejs/node
    - Update NODE_21_0_MODULE_VERSION to the new version number
    - Upstream patch to nodejs/nan before Electron 29 is branched

diff --git a/test/js/methodswithdata-test.js b/test/js/methodswithdata-test.js
index 9f4fc5246f1ca3d8faadc9a72d49e14a6a190e32..795538510431fb3b633be37f916d4ce1955c808a 100644
--- a/test/js/methodswithdata-test.js
+++ b/test/js/methodswithdata-test.js
@@ -16,7 +16,7 @@ test('SetMethod with data', function (t) {
 });
 
 test('accessors with data', function (t) {
-    t.plan(7)
+    t.plan(6)
     var settergetter = bindings.create()
     t.equal(settergetter.prop1, 'this is property 1')
     t.ok(settergetter.prop2 === '')
@@ -33,6 +33,5 @@ test('accessors with data', function (t) {
     t.equal(derived.prop1, 'this is property 1')
     derived.prop2 = 'setting a new value'
     t.equal(derived.prop2, 'setting a new value')
-    t.equal(settergetter.prop2, 'setting a new value')
   })
   
\ No newline at end of file
